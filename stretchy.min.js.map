{"version":3,"sources":["stretchy.js"],"names":["$$","expr","con","Node","Window","slice","call","document","querySelectorAll","self","Element","prototype","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","_","Stretchy","selectors","base","split","join","filter","script","currentScript","pop","resize","element","resizes","cs","getComputedStyle","offset","value","placeholder","empty","type","nodeName","toLowerCase","hasTransition","parseFloat","transitionDuration","clonedNode","cloneNode","style","transition","body","appendChild","height","boxSizing","offsetHeight","clientHeight","minHeight","scrollHeight","width","offsetWidth","clientWidth","minWidth","scrollLeft","Math","max","scrollWidth","length","selectedIndex","option","createElement","textContent","options","parentNode","insertBefore","nextSibling","appearance","property","test","removeChild","resizeAll","elements","forEach","active","init","getAttribute","readyState","addEventListener","listener","evt","target","documentElement","MutationObserver","mutations","mutation","addedNodes","observe","childList","subtree"],"mappings":"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","file":"stretchy.min.js","sourcesContent":["/*\n * Stretchy: Form element autosizing, the way it should be.\n * by Lea Verou http://lea.verou.me\n * MIT license\n */\n(function() {\n\nif (!self.Element) {\n\treturn; // super old browser\n}\n\nif (!Element.prototype.matches) {\n\tElement.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || null;\n}\n\nif (!Element.prototype.matches) {\n\treturn;\n}\n\nfunction $$(expr, con) {\n\treturn expr instanceof Node || expr instanceof Window? [expr] :\n\t       [].slice.call(typeof expr == \"string\"? (con || document).querySelectorAll(expr) : expr || []);\n}\n\nvar _ = self.Stretchy = {\n\tselectors: {\n\t\tbase: 'textarea, select:not([size]), input:not([type]), input[type=\"' + \"text url email tel\".split(\" \").join('\"], input[type=\"') + '\"]',\n\t\tfilter: \"*\"\n\t},\n\n\t// Script element this was included with, if any\n\tscript: document.currentScript || $$(\"script\").pop(),\n\n\t// Autosize one element. The core of Stretchy.\n\tresize: function(element) {\n\t\tif (!_.resizes(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar cs = getComputedStyle(element);\n\t\tvar offset = 0;\n\n\t\tif (!element.value && element.placeholder) {\n\t\t\tvar empty = true;\n\t\t\telement.value = element.placeholder;\n\t\t}\n\n\t\tvar type = element.nodeName.toLowerCase();\n\t\tvar hasTransition = !!parseFloat(cs.transitionDuration);\n\t\tvar clonedNode = hasTransition ? element.cloneNode(true) : element;\n\t\tif (hasTransition) {\n\t\t\tclonedNode.style.transition = 'none';\n\t\t\tdocument.body.appendChild(clonedNode);\n\t\t}\n\n\t\tif (type == \"textarea\") {\n\t\t\tclonedNode.style.height = \"0\";\n\n\t\t\tif (cs.boxSizing == \"border-box\") {\n\t\t\t\toffset = clonedNode.offsetHeight;\n\t\t\t}\n\t\t\telse if (cs.boxSizing == \"content-box\") {\n\t\t\t\toffset = -clonedNode.clientHeight + parseFloat(cs.minHeight);\n\t\t\t}\n\n\t\t\telement.style.height = clonedNode.scrollHeight + offset + \"px\";\n\t\t}\n\t\telse if(type == \"input\") {\n\t\t\t// First test that it is actually visible, otherwise all measurements are off\n\t\t\tclonedNode.style.width = \"1000px\";\n\n\t\t\tif (clonedNode.offsetWidth) {\n\t\t\t\tclonedNode.style.width = \"0\";\n\n\t\t\t\tif (cs.boxSizing == \"border-box\") {\n\t\t\t\t\toffset = clonedNode.offsetWidth;\n\t\t\t\t}\n\t\t\t\telse if (cs.boxSizing == \"padding-box\") {\n\t\t\t\t\toffset = clonedNode.clientWidth;\n\t\t\t\t}\n\t\t\t\telse if (cs.boxSizing == \"content-box\") {\n\t\t\t\t\toffset = parseFloat(cs.minWidth);\n\t\t\t\t}\n\n\t\t\t\t// Safari misreports scrollWidth, so we will instead set scrollLeft to a\n\t\t\t\t// huge number, and read that back to see what it was clipped to\n\t\t\t\tclonedNode.scrollLeft = 1e+10;\n\n\t\t\t\tvar width = Math.max(clonedNode.scrollLeft + offset, clonedNode.scrollWidth - clonedNode.clientWidth);\n\n\t\t\t\telement.style.width = width + \"px\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Element is invisible, just set to something reasonable\n\t\t\t\telement.style.width = clonedNode.value.length + 1 + \"ch\";\n\t\t\t}\n\t\t}\n\t\telse if (type == \"select\") {\n\t\t\tvar selectedIndex = element.selectedIndex > 0? element.selectedIndex : 0;\n\n\t\t\t// Need to use dummy element to measure :(\n\t\t\tvar option = document.createElement(\"_\");\n\t\t\toption.textContent = clonedNode.options[selectedIndex].textContent;\n\t\t\tclonedNode.parentNode.insertBefore(option, clonedNode.nextSibling);\n\n\t\t\t// The name of the appearance property, as it might be prefixed\n\t\t\tvar appearance;\n\n\t\t\tfor (var property in cs) {\n\t\t\t\tvar value = cs[property];\n\t\t\t\tif (!/^(width|webkitLogicalWidth|length)$/.test(property) && typeof value == \"string\") {\n\t\t\t\t\t//console.log(property, option.offsetWidth, cs[property]);\n\t\t\t\t\toption.style[property] = value;\n\n\t\t\t\t\tif (/appearance$/i.test(property)) {\n\t\t\t\t\t\tappearance = property;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toption.style.width = \"\";\n\n\t\t\tif (option.offsetWidth > 0) {\n\t\t\t\tclonedNode.style.width = option.offsetWidth + \"px\";\n\n\t\t\t\tif (!cs[appearance] || cs[appearance] !== \"none\") {\n\t\t\t\t\t// Account for arrow\n\t\t\t\t\telement.style.width = \"calc(\" + clonedNode.style.width + \" + 2em)\";\n\t\t\t\t} else {\n\t\t\t\t\telement.style.width = clonedNode.style.width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toption.parentNode.removeChild(option);\n\t\t\toption = null;\n\t\t}\n\n\t\tif (empty) {\n\t\t\telement.value = \"\";\n\t\t}\n\n\t\tif (hasTransition) {\n\t\t\tdocument.body.removeChild(clonedNode);\n\t\t}\n\t},\n\n\t// Autosize multiple elements\n\tresizeAll: function(elements) {\n\t\t$$(elements || _.selectors.base).forEach(function (element) {\n\t\t\t_.resize(element);\n\t\t});\n\t},\n\n\tactive: true,\n\n\t// Will stretchy do anything for this element?\n\tresizes: function(element) {\n\t\treturn element &&\n\t\t       element.parentNode &&\n\t\t       element.matches &&\n\t\t       element.matches(_.selectors.base) &&\n\t\t       element.matches(_.selectors.filter);\n\t},\n\n\tinit: function(){\n\t\t_.selectors.filter = _.script.getAttribute(\"data-filter\") ||\n\t\t                     ($$(\"[data-stretchy-filter]\").pop() || document.body).getAttribute(\"data-stretchy-filter\") || Stretchy.selectors.filter || \"*\";\n\n\t\t_.resizeAll();\n\t},\n\n\t$$: $$\n};\n\n// Autosize all elements once the DOM is loaded\n\n// DOM already loaded?\nif (document.readyState !== \"loading\") {\n\t_.init();\n}\nelse {\n\t// Wait for it\n\tdocument.addEventListener(\"DOMContentLoaded\", _.init);\n}\n\n// Listen for changes\nvar listener = function(evt) {\n\tif (_.active) {\n\t\t_.resize(evt.target);\n\t}\n};\n\ndocument.documentElement.addEventListener(\"input\", listener);\n\n// Firefox fires a change event instead of an input event\ndocument.documentElement.addEventListener(\"change\", listener);\n\n// Listen for new elements\nif (self.MutationObserver) {\n\t(new MutationObserver(function(mutations) {\n\t\tif (_.active) {\n\t\t\tmutations.forEach(function(mutation) {\n\t\t\t\tif (mutation.type == \"childList\") {\n\t\t\t\t\tStretchy.resizeAll(mutation.addedNodes);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t})).observe(document.documentElement, {\n\t\tchildList: true,\n\t\tsubtree: true\n\t});\n}\n\n})();\n"]}